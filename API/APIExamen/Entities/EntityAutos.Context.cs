//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace APIExamen.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class AutosBDEntities : DbContext
    {
        public AutosBDEntities()
            : base("name=AutosBDEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Descripcion> Descripcion { get; set; }
        public virtual DbSet<ListaDeAutos> ListaDeAutos { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<ModeloSubMarca> ModeloSubMarca { get; set; }
        public virtual DbSet<SubMarca> SubMarca { get; set; }
    
        public virtual ObjectResult<spGetDescripcion_Result> spGetDescripcion(Nullable<int> piMarca, Nullable<int> piSubMarca, Nullable<int> piModeloSubMarca)
        {
            var piMarcaParameter = piMarca.HasValue ?
                new ObjectParameter("piMarca", piMarca) :
                new ObjectParameter("piMarca", typeof(int));
    
            var piSubMarcaParameter = piSubMarca.HasValue ?
                new ObjectParameter("piSubMarca", piSubMarca) :
                new ObjectParameter("piSubMarca", typeof(int));
    
            var piModeloSubMarcaParameter = piModeloSubMarca.HasValue ?
                new ObjectParameter("piModeloSubMarca", piModeloSubMarca) :
                new ObjectParameter("piModeloSubMarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetDescripcion_Result>("spGetDescripcion", piMarcaParameter, piSubMarcaParameter, piModeloSubMarcaParameter);
        }
    
        public virtual ObjectResult<spGetMarca_Result> spGetMarca()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetMarca_Result>("spGetMarca");
        }
    
        public virtual ObjectResult<spGetModeloSubMarca_Result> spGetModeloSubMarca(Nullable<int> piSubMarca)
        {
            var piSubMarcaParameter = piSubMarca.HasValue ?
                new ObjectParameter("piSubMarca", piSubMarca) :
                new ObjectParameter("piSubMarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetModeloSubMarca_Result>("spGetModeloSubMarca", piSubMarcaParameter);
        }
    
        public virtual ObjectResult<spGetSubMarca_Result> spGetSubMarca(Nullable<int> piMarca)
        {
            var piMarcaParameter = piMarca.HasValue ?
                new ObjectParameter("piMarca", piMarca) :
                new ObjectParameter("piMarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSubMarca_Result>("spGetSubMarca", piMarcaParameter);
        }
    }
}
